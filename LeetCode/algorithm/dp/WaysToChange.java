package leetcode.algorithm.dp;

public class WaysToChange {
    final static int MOD = 1000000007;
    /**
     使用数学方法：
     1、使用一个循环首先确定25分硬币的使用个数
     2、然后剩余金额，可以用10分和5分和1分拼凑
     当10分硬币使用0个时候，5分硬币为（最大使用数+1）因为使用0次要考虑所以要加1，确定了5分硬币1分的也确定了
     当10分硬币使用一次时候，5分硬币使用次数。。。
     当10分硬币使用最多次次时，5分硬币使用。。。
     由上可以发现，每次5分硬币使用次数构成一个等差数列
     首项即为当10分硬币使用0次时使用的次数为n/5+1
     项数即为10分硬币使用的最大次数加1（仔细画图思考）n/10+1;
     通过首项和项数可以求出25分银币使用i次时的总次数，再将总次数相加可得到所有的
     */
    public int waysToChange(int n) {
        int ans = 0;


        //循环i确定25分硬币的使用个数
        for (int i = 0; i*25 <= n; i++) {
            //算出除用25分硬币的剩金额
            int rest = n - i*25;
            //计算出5分硬币使用的最大次数加1（求首项）
            int x = rest / 5 + 1;
            //求出10分硬币使用的最大次数加1（项数）
            int y = rest / 10 + 1;
            //当每次i一定时可能总数
            long count = (x - y + 1) * y;
            ans  = (int)(ans + count) % MOD;
        }

        return ans;
    }
}
